-- Active: 1698935384812@@127.0.0.1@3306@assignment_06

-- Create Customers table
CREATE TABLE Customers (
    customer_ID BIGINT(20) NOT NULL AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL
);

-- Create Orders table
CREATE TABLE Orders (
    order_ID BIGINT(20) NOT NULL AUTO_INCREMENT PRIMARY KEY,
    customer_ID INT,
    order_date DATE,
    total_amount DECIMAL(10, 2),
    FOREIGN KEY (customer_ID) REFERENCES Customers(customer_ID)
);

-- Create Products table
CREATE TABLE Products (
    product_ID BIGINT(20) NOT NULL AUTO_INCREMENT,
    name VARCHAR(255),
    description TEXT,
    price DECIMAL(10, 2)
);

-- Create Categories table
CREATE TABLE Categories (
    category_ID BIGINT(20) NOT NULL AUTO_INCREMENT,
    name VARCHAR(255)
);

-- Create Order_Items table
CREATE TABLE Order_Items (
    order_item_ID BIGINT(20) NOT NULL AUTO_INCREMENT,
    order_ID INT,
    product_ID INT,
    quantity INT,
    unit_price DECIMAL(10, 2),
    FOREIGN KEY (order_ID) REFERENCES Orders(order_ID),
    FOREIGN KEY (product_ID) REFERENCES Products(product_ID)
);

-- ==========================
-- task 1:Write a SQL query to retrieve all the customer information along with the total number of orders placed by each customer. Display the result in descending order of the number of orders.
-- =========================

SELECT
    Customers.customer_ID,
    Customers.name,
    Customers.email,
    Customers.location,
    COUNT(Orders.order_ID) AS total_orders
FROM
    Customers
LEFT JOIN
    Orders ON Customers.customer_ID = Orders.customer_ID
GROUP BY
    Customers.customer_ID, Customers.name, Customers.email, Customers.location
ORDER BY
    total_orders DESC;


-- ==========================
-- task 2:Write a SQL query to retrieve the product name, quantity, and total amount for each order item. Display the result in ascending order of the order ID.
-- ==========================

SELECT
    Orders.order_ID,
    Products.name AS product_name,
    Order_Items.quantity,
    (Order_Items.quantity * Order_Items.unit_price) AS total_amount
FROM
    Orders
JOIN
    Order_Items ON Orders.order_ID = Order_Items.order_ID
JOIN
    Products ON Order_Items.product_ID = Products.product_ID
ORDER BY
    Orders.order_ID ASC;


-- ==========================
-- task 3:Write a SQL query to retrieve the total revenue generated by each product category. Display the category name along with the total revenue in descending order of the revenue.
-- ==========================

SELECT
    categories.name AS category_name,
    SUM(Order_Items.quantity * Order_Items.unit_price) AS total_revenue
FROM
    categories
JOIN
    products ON Categories.category_ID = products.category_ID
JOIN
    order_Items ON products.product_ID = order_Items.product_ID
GROUP BY
    categories.name
ORDER BY
    total_revenue DESC;

-- ==========================
-- task 3:Write a SQL query to retrieve the top 5 customers who have made the highest total purchase amount. Display the customer name along with the total purchase amount in descending order of the purchase amount.
-- ==========================

SELECT
    Customers.name AS customer_name,
    SUM(Orders.total_amount) AS total_purchase_amount
FROM
    Customers
JOIN
    Orders ON Customers.customer_ID = Orders.customer_ID
GROUP BY
    Customers.customer_ID, Customers.name
ORDER BY
    total_purchase_amount DESC
LIMIT 5;

